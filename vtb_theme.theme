<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Markup;


// Версия 1.0

function vtb_theme_preprocess(&$variables, $hook) {
  $variables['base_path'] = base_path();
  if( isset($base_url) && ($base_url!==null) ) {
    $variables['assets_path'] = $base_url . base_path() .drupal_get_path('theme', 'vtb_theme');
  }
  $variables['lang'] = \Drupal::languageManager()->getCurrentLanguage();
}


/**
 * Implements hook_form_alter();
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function vtb_theme_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if(\Drupal::request()->isXmlHttpRequest()){
    $form['status-messages'] = [
      '#theme' => 'status_messages',
      '#weight' => -100,
    ];

    $messages = \Drupal::messenger()->deleteAll();
    if (sizeof($messages)) {
      $form['status-messages'] = [
        '#theme' => 'status_messages',
        '#weight' => -100,
        '#message_list' => $messages,
        '#status_headings' => [
          'status' => t('Status message'),
          'error' => t('Error message'),
          'warning' => t('Warning message'),
        ],
      ];
    }

    if($form_id == 'views_exposed_form' && isset($form['secondary'])){
      $form['actions']['#group'] = 'secondary';
    }
  }

  if($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-faqs-page-1'){
    if(isset($form['actions']) && isset($form['actions']['reset'])){
      $old_reset = $form['actions']['reset'];
      $form['actions']['reset'] = [
        '#type' => 'link',
        '#title' => $old_reset['#value'],
        '#url' => \Drupal\Core\Url::fromRoute('ibm_apim.support'),
        '#attributes' => ['class' => ['button', 'apicSecondary']],
      ];
    }
  }
}


/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function vtb_theme_form_application_create_form_two_alter(array &$form, FormStateInterface $form_state){
  $form['client_id']['#prefix'] = Markup::create('
    <p class="field__label">' . t('Client ID') . '</p>  
  ');

  $form['client_secret']['#prefix'] = Markup::create('
    <p class="field__label">' . t('Client Secret') . '</p>
  ');
}

/**
 * Implements hook_preprocess_node().
 */
function vtb_theme_preprocess_node(array &$variables) {
  // Декодируем данные
  if(isset($variables['node']) && $variables['node']->bundle() == 'product'){
    foreach ($variables['planList'] as $id => $plan){
      $parsed = NULL;
      if(isset($plan['rateData'])){
        $parsed = \Drupal\Component\Serialization\Json::decode($plan['rateData']);
      }
      $variables['planList'][$id]['parsedPlanList'] = $parsed;
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 * Добавление текста на форму регистрации.
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function vtb_theme_form_user_register_form_alter(array &$form, FormStateInterface $form_state){
  $form['register_text'] = [
    '#prefix' => '<div class="register-text">',
    '#markup' => Drupal\Core\Render\Markup::create('Нажимая на кнопку "Зарегистрироваться", вы принимаете условия <a class="link-primary" href="https://portal.k3-apic-web101xv.vtb24.ru/vtb/test/sites/vtb.test.portal.k3-apic-web101xv.vtb24.ru/themes/vtb_theme/documents/user_agreement.pdf" target="_blank">Пользовательского соглашения</a> и <a class="link-primary" href="https://portal.k3-apic-web101xv.vtb24.ru/vtb/test/sites/vtb.test.portal.k3-apic-web101xv.vtb24.ru/themes/vtb_theme/documents/Obrabotka-pdn.pdf" target="_blank">Положения об организации обработки персональных данных в Банке ВТБ (ПАО)</a>'),
    '#weight' => 49,  //Вес – позиция относительно других элементов формы
    '#suffix' => '</div>'
  ];
  
  // Кнопки сохранения в самом низу формы
  $form['actions']['#weight'] = 50;
}